\BOOKMARK [1][-]{section.1}{Introduction - February 19, 2020}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Defining Dependable Systems}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{How to make systems tolerate faults}{subsection.1.1}% 3
\BOOKMARK [3][-]{subsubsection.1.1.2}{Defining distributed computation}{subsection.1.1}% 4
\BOOKMARK [3][-]{subsubsection.1.1.3}{Layered modules}{subsection.1.1}% 5
\BOOKMARK [3][-]{subsubsection.1.1.4}{Module Jobhandler}{subsection.1.1}% 6
\BOOKMARK [2][-]{subsection.1.2}{Concurrency and Replication in Distributed Systems}{section.1}% 7
\BOOKMARK [1][-]{section.2}{Models and Abstructions - February 26, 2020}{}% 8
\BOOKMARK [2][-]{subsection.2.1}{Processes and Protocols}{section.2}% 9
\BOOKMARK [3][-]{subsubsection.2.1.1}{Execution}{subsection.2.1}% 10
\BOOKMARK [3][-]{subsubsection.2.1.2}{Properties}{subsection.2.1}% 11
\BOOKMARK [3][-]{subsubsection.2.1.3}{Process Failures}{subsection.2.1}% 12
\BOOKMARK [2][-]{subsection.2.2}{Cryptographic Abstraction}{section.2}% 13
\BOOKMARK [2][-]{subsection.2.3}{Communication Abstraction}{section.2}% 14
\BOOKMARK [3][-]{subsubsection.2.3.1}{Stubborn point-to-point links}{subsection.2.3}% 15
\BOOKMARK [3][-]{subsubsection.2.3.2}{Perfect point-to-point links}{subsection.2.3}% 16
\BOOKMARK [3][-]{subsubsection.2.3.3}{Alg. impl. perfect links \(pl\) from stubborn links \(sl\)}{subsection.2.3}% 17
\BOOKMARK [2][-]{subsection.2.4}{Timing Assumptions}{section.2}% 18
\BOOKMARK [1][-]{section.3}{Timing Assumptions - March 3, 2020}{}% 19
\BOOKMARK [2][-]{subsection.3.1}{Asynchronous System}{section.3}% 20
\BOOKMARK [3][-]{subsubsection.3.1.1}{Happens-before relation}{subsection.3.1}% 21
\BOOKMARK [3][-]{subsubsection.3.1.2}{Lemma}{subsection.3.1}% 22
\BOOKMARK [2][-]{subsection.3.2}{Synchronous System}{section.3}% 23
\BOOKMARK [2][-]{subsection.3.3}{Partially Synchronous Model}{section.3}% 24
\BOOKMARK [2][-]{subsection.3.4}{Abstracting Time}{section.3}% 25
\BOOKMARK [3][-]{subsubsection.3.4.1}{Implementing P}{subsection.3.4}% 26
\BOOKMARK [1][-]{section.4}{System Models - March 11, 2020}{}% 27
\BOOKMARK [2][-]{subsection.4.1}{Chapter 3: Distributed Storage and Shared Memory}{section.4}% 28
\BOOKMARK [3][-]{subsubsection.4.1.1}{Main Abstraction}{subsection.4.1}% 29
\BOOKMARK [3][-]{subsubsection.4.1.2}{Definition \(Preceding\)}{subsection.4.1}% 30
\BOOKMARK [3][-]{subsubsection.4.1.3}{Definition \(Sequential\)}{subsection.4.1}% 31
\BOOKMARK [3][-]{subsubsection.4.1.4}{Definition \(Concurrent\)}{subsection.4.1}% 32
\BOOKMARK [3][-]{subsubsection.4.1.5}{Register Example}{subsection.4.1}% 33
\BOOKMARK [3][-]{subsubsection.4.1.6}{An unsafe register}{subsection.4.1}% 34
\BOOKMARK [3][-]{subsubsection.4.1.7}{Implementation of an \(1,N\) Regualar Register in Fail-Silent Mode}{subsection.4.1}% 35
\BOOKMARK [1][-]{section.5}{Implementations of Registers - March 18, 2020}{}% 36
\BOOKMARK [2][-]{subsection.5.1}{Regular register implementation in fail-stop model}{section.5}% 37
\BOOKMARK [2][-]{subsection.5.2}{Regular register implementation in fail-silent model}{section.5}% 38
\BOOKMARK [2][-]{subsection.5.3}{Example execution}{section.5}% 39
\BOOKMARK [2][-]{subsection.5.4}{Make Algorithm \(above\) \(Alg. 4.2\) atomic}{section.5}% 40
\BOOKMARK [2][-]{subsection.5.5}{From \(1,1\) atomic to \(1,N\) atomic register}{section.5}% 41
\BOOKMARK [2][-]{subsection.5.6}{From \(1,N\) atomic to \(N,N\) atomic register}{section.5}% 42
\BOOKMARK [2][-]{subsection.5.7}{Register Implementation in Byzantine Model \(N > 3F\)}{section.5}% 43
\BOOKMARK [1][-]{section.6}{Byzantine Distributed Storage - March 25, 2020}{}% 44
\BOOKMARK [2][-]{subsection.6.1}{Specification}{section.6}% 45
\BOOKMARK [3][-]{subsubsection.6.1.1}{\(1,N\)-regular Register}{subsection.6.1}% 46
\BOOKMARK [3][-]{subsubsection.6.1.2}{Can we implement this w/o signatures?}{subsection.6.1}% 47
\BOOKMARK [3][-]{subsubsection.6.1.3}{Practical Leaderless Replication}{subsection.6.1}% 48
\BOOKMARK [2][-]{subsection.6.2}{Key-Value Store \(KVS\)}{section.6}% 49
\BOOKMARK [1][-]{section.7}{Chapter 4: Reliable Broadcast - April 01, 2020}{}% 50
\BOOKMARK [2][-]{subsection.7.1}{Definition}{section.7}% 51
\BOOKMARK [2][-]{subsection.7.2}{Best-Effort Broadcast \(Unreliable\)}{section.7}% 52
\BOOKMARK [3][-]{subsubsection.7.2.1}{Definition \(Validity\):}{subsection.7.2}% 53
\BOOKMARK [3][-]{subsubsection.7.2.2}{Definition \(No Duplication\):}{subsection.7.2}% 54
\BOOKMARK [3][-]{subsubsection.7.2.3}{Definition \(No Creation\):}{subsection.7.2}% 55
\BOOKMARK [2][-]{subsection.7.3}{Messages are unique}{section.7}% 56
\BOOKMARK [2][-]{subsection.7.4}{Reliable Broadcast}{section.7}% 57
\BOOKMARK [3][-]{subsubsection.7.4.1}{Definition:}{subsection.7.4}% 58
\BOOKMARK [2][-]{subsection.7.5}{Eager Reliable Broadcast}{section.7}% 59
\BOOKMARK [3][-]{subsubsection.7.5.1}{Implementation:}{subsection.7.5}% 60
\BOOKMARK [3][-]{subsubsection.7.5.2}{How adequate is this \(basic\) reliable broadcast?}{subsection.7.5}% 61
\BOOKMARK [2][-]{subsection.7.6}{Uniform Reliable Broadcast}{section.7}% 62
\BOOKMARK [3][-]{subsubsection.7.6.1}{Definition:}{subsection.7.6}% 63
\BOOKMARK [3][-]{subsubsection.7.6.2}{Implementation of URB in async. netw. with f crashes and N > 2f}{subsection.7.6}% 64
\BOOKMARK [2][-]{subsection.7.7}{Order}{section.7}% 65
\BOOKMARK [3][-]{subsubsection.7.7.1}{FIFO-Order Broadcast}{subsection.7.7}% 66
\BOOKMARK [3][-]{subsubsection.7.7.2}{Causal Order \(broadcast\):}{subsection.7.7}% 67
\BOOKMARK [1][-]{section.8}{Chapter 6: Total-Order Broadcast - 08.04.2020}{}% 68
\BOOKMARK [2][-]{subsection.8.1}{Notion of Causality}{section.8}% 69
\BOOKMARK [3][-]{subsubsection.8.1.1}{Events}{subsection.8.1}% 70
\BOOKMARK [3][-]{subsubsection.8.1.2}{Causality Relation}{subsection.8.1}% 71
\BOOKMARK [2][-]{subsection.8.2}{Causal-Order Broadcast using Vector Clocks}{section.8}% 72
\BOOKMARK [3][-]{subsubsection.8.2.1}{Example}{subsection.8.2}% 73
\BOOKMARK [2][-]{subsection.8.3}{Total-Order Broadcast}{section.8}% 74
\BOOKMARK [2][-]{subsection.8.4}{Consensus}{section.8}% 75
\BOOKMARK [3][-]{subsubsection.8.4.1}{Events}{subsection.8.4}% 76
\BOOKMARK [3][-]{subsubsection.8.4.2}{Properties}{subsection.8.4}% 77
\BOOKMARK [2][-]{subsection.8.5}{From Consensus to Total-Order Broadcast}{section.8}% 78
\BOOKMARK [2][-]{subsection.8.6}{From Total-Order Broadcast to Consensus}{section.8}% 79
\BOOKMARK [2][-]{subsection.8.7}{State-Machine Replication}{section.8}% 80
\BOOKMARK [3][-]{subsubsection.8.7.1}{Events}{subsection.8.7}% 81
\BOOKMARK [3][-]{subsubsection.8.7.2}{Properties}{subsection.8.7}% 82
\BOOKMARK [2][-]{subsection.8.8}{From Total-Order Broadcast to Replicated State-Machine}{section.8}% 83
\BOOKMARK [1][-]{section.9}{Consensus - April 22, 2020}{}% 84
\BOOKMARK [2][-]{subsection.9.1}{Definition}{section.9}% 85
\BOOKMARK [3][-]{subsubsection.9.1.1}{Events}{subsection.9.1}% 86
\BOOKMARK [3][-]{subsubsection.9.1.2}{Properties}{subsection.9.1}% 87
\BOOKMARK [2][-]{subsection.9.2}{Flooding Uniform Consensus}{section.9}% 88
\BOOKMARK [2][-]{subsection.9.3}{Consensus Protocol with Eventual Synchrony}{section.9}% 89
\BOOKMARK [3][-]{subsubsection.9.3.1}{Epoch-Change}{subsection.9.3}% 90
\BOOKMARK [3][-]{subsubsection.9.3.2}{Epoch-Consensus}{subsection.9.3}% 91
\BOOKMARK [2][-]{subsection.9.4}{Leader-Driven Consensus}{section.9}% 92
\BOOKMARK [3][-]{subsubsection.9.4.1}{Why Agreement?}{subsection.9.4}% 93
\BOOKMARK [1][-]{section.10}{10th Lecture - April 29, 2020}{}% 94
\BOOKMARK [2][-]{subsection.10.1}{sub}{section.10}% 95
\BOOKMARK [3][-]{subsubsection.10.1.1}{subsub}{subsection.10.1}% 96
\BOOKMARK [1][-]{section.11}{Byzantine Consensus - May 6, 2020}{}% 97
\BOOKMARK [2][-]{subsection.11.1}{Weak Byzantine Consensus}{section.11}% 98
\BOOKMARK [3][-]{subsubsection.11.1.1}{Events}{subsection.11.1}% 99
\BOOKMARK [3][-]{subsubsection.11.1.2}{Properties}{subsection.11.1}% 100
\BOOKMARK [2][-]{subsection.11.2}{Strong Byzantine Consensus}{section.11}% 101
\BOOKMARK [3][-]{subsubsection.11.2.1}{Properties}{subsection.11.2}% 102
\BOOKMARK [2][-]{subsection.11.3}{Special Case: Binary Consensus}{section.11}% 103
\BOOKMARK [3][-]{subsubsection.11.3.1}{Properties}{subsection.11.3}% 104
\BOOKMARK [2][-]{subsection.11.4}{Fault-Tolerance}{section.11}% 105
\BOOKMARK [3][-]{subsubsection.11.4.1}{Theorem}{subsection.11.4}% 106
\BOOKMARK [3][-]{subsubsection.11.4.2}{Proof}{subsection.11.4}% 107
\BOOKMARK [3][-]{subsubsection.11.4.3}{Intuition}{subsection.11.4}% 108
\BOOKMARK [2][-]{subsection.11.5}{Reliable Broadcasts with Byzantine Faults}{section.11}% 109
\BOOKMARK [3][-]{subsubsection.11.5.1}{Events}{subsection.11.5}% 110
\BOOKMARK [3][-]{subsubsection.11.5.2}{Properties}{subsection.11.5}% 111
\BOOKMARK [2][-]{subsection.11.6}{Signed Echo Broadcast}{section.11}% 112
\BOOKMARK [3][-]{subsubsection.11.6.1}{Why Consistent?}{subsection.11.6}% 113
\BOOKMARK [2][-]{subsection.11.7}{Byzantine Reliable Broadcasts \(Bracha\)}{section.11}% 114
\BOOKMARK [3][-]{subsubsection.11.7.1}{Definition}{subsection.11.7}% 115
\BOOKMARK [3][-]{subsubsection.11.7.2}{Implementation \(by Bracha\)}{subsection.11.7}% 116
\BOOKMARK [3][-]{subsubsection.11.7.3}{Why does this ensure totality?}{subsection.11.7}% 117
\BOOKMARK [3][-]{subsubsection.11.7.4}{How can we croadcast many payload messages?}{subsection.11.7}% 118
\BOOKMARK [2][-]{subsection.11.8}{Byzantine Total Order Broadcasts}{section.11}% 119
\BOOKMARK [1][-]{section.12}{12th Lecture - May 13, 2020}{}% 120
\BOOKMARK [2][-]{subsection.12.1}{Group Membership}{section.12}% 121
\BOOKMARK [3][-]{subsubsection.12.1.1}{Formalization of group membership}{subsection.12.1}% 122
\BOOKMARK [3][-]{subsubsection.12.1.2}{Implementation}{subsection.12.1}% 123
\BOOKMARK [2][-]{subsection.12.2}{Group Communication Systems \(View Synchrony\)}{section.12}% 124
\BOOKMARK [3][-]{subsubsection.12.2.1}{Popular Implementations}{subsection.12.2}% 125
\BOOKMARK [2][-]{subsection.12.3}{Probabilistic Broadcast}{section.12}% 126
\BOOKMARK [3][-]{subsubsection.12.3.1}{Example Probabilistic Reliable Broadcast}{subsection.12.3}% 127
\BOOKMARK [3][-]{subsubsection.12.3.2}{Protocols for Probabilistic Broadcast}{subsection.12.3}% 128
\BOOKMARK [2][-]{subsection.12.4}{Blockchain Consensus}{section.12}% 129
\BOOKMARK [3][-]{subsubsection.12.4.1}{Proof of Work}{subsection.12.4}% 130
\BOOKMARK [1][-]{section.13}{13th Lecture - May 21, 2020}{}% 131
\BOOKMARK [2][-]{subsection.13.1}{sub}{section.13}% 132
\BOOKMARK [3][-]{subsubsection.13.1.1}{subsub}{subsection.13.1}% 133
