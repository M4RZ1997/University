\BOOKMARK [1][-]{section.1}{Introduction - February 19, 2020}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Defining Dependable Systems}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{How to make systems tolerate faults}{subsection.1.1}% 3
\BOOKMARK [3][-]{subsubsection.1.1.2}{Defining distributed computation}{subsection.1.1}% 4
\BOOKMARK [3][-]{subsubsection.1.1.3}{Layered modules}{subsection.1.1}% 5
\BOOKMARK [3][-]{subsubsection.1.1.4}{Module Jobhandler}{subsection.1.1}% 6
\BOOKMARK [2][-]{subsection.1.2}{Concurrency and Replication in Distributed Systems}{section.1}% 7
\BOOKMARK [1][-]{section.2}{Models and Abstructions - February 26, 2020}{}% 8
\BOOKMARK [2][-]{subsection.2.1}{Processes and Protocols}{section.2}% 9
\BOOKMARK [3][-]{subsubsection.2.1.1}{Execution}{subsection.2.1}% 10
\BOOKMARK [3][-]{subsubsection.2.1.2}{Properties}{subsection.2.1}% 11
\BOOKMARK [3][-]{subsubsection.2.1.3}{Process Failures}{subsection.2.1}% 12
\BOOKMARK [2][-]{subsection.2.2}{Cryptographic Abstraction}{section.2}% 13
\BOOKMARK [2][-]{subsection.2.3}{Communication Abstraction}{section.2}% 14
\BOOKMARK [3][-]{subsubsection.2.3.1}{Stubborn point-to-point links}{subsection.2.3}% 15
\BOOKMARK [3][-]{subsubsection.2.3.2}{Perfect point-to-point links}{subsection.2.3}% 16
\BOOKMARK [3][-]{subsubsection.2.3.3}{Alg. impl. perfect links \(pl\) from stubborn links \(sl\)}{subsection.2.3}% 17
\BOOKMARK [2][-]{subsection.2.4}{Timing Assumptions}{section.2}% 18
\BOOKMARK [1][-]{section.3}{Timing Assumptions - March 3, 2020}{}% 19
\BOOKMARK [2][-]{subsection.3.1}{Asynchronous System}{section.3}% 20
\BOOKMARK [3][-]{subsubsection.3.1.1}{Happens-before relation}{subsection.3.1}% 21
\BOOKMARK [3][-]{subsubsection.3.1.2}{Lemma}{subsection.3.1}% 22
\BOOKMARK [2][-]{subsection.3.2}{Synchronous System}{section.3}% 23
\BOOKMARK [2][-]{subsection.3.3}{Partially Synchronous Model}{section.3}% 24
\BOOKMARK [2][-]{subsection.3.4}{Abstracting Time}{section.3}% 25
\BOOKMARK [3][-]{subsubsection.3.4.1}{Implementing P}{subsection.3.4}% 26
\BOOKMARK [1][-]{section.4}{System Models - March 11, 2020}{}% 27
\BOOKMARK [2][-]{subsection.4.1}{Chapter 3: Distributed Storage and Shared Memory}{section.4}% 28
\BOOKMARK [3][-]{subsubsection.4.1.1}{Main Abstraction}{subsection.4.1}% 29
\BOOKMARK [3][-]{subsubsection.4.1.2}{Definition \(Preceding\)}{subsection.4.1}% 30
\BOOKMARK [3][-]{subsubsection.4.1.3}{Definition \(Sequential\)}{subsection.4.1}% 31
\BOOKMARK [3][-]{subsubsection.4.1.4}{Definition \(Concurrent\)}{subsection.4.1}% 32
\BOOKMARK [3][-]{subsubsection.4.1.5}{Register Example}{subsection.4.1}% 33
\BOOKMARK [3][-]{subsubsection.4.1.6}{An unsafe register}{subsection.4.1}% 34
\BOOKMARK [3][-]{subsubsection.4.1.7}{Implementation of an \(1,N\) Regualar Register in Fail-Silent Mode}{subsection.4.1}% 35
\BOOKMARK [1][-]{section.5}{5th Lecture - March 14, 2020}{}% 36
\BOOKMARK [2][-]{subsection.5.1}{sub}{section.5}% 37
